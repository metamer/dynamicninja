<?xml version="1.0"?>
<project name="ConsoleGame" default="dist" basedir=".">
  
  <!-- global properties -->
	
  <property name="src.dir" location="src" />
  <property name="lib.dir" location="lib" />
  <property name="build.dir" location="bin" />
	<property name="obj.dir" location="obj" />

  	
  <path id="build.classpath">
    <fileset dir="${lib.dir}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <!-- platform dependence -->

	<target name="check-os">

		 <condition property="isMac">
		    <os family="mac" />
		  </condition>

		  <condition property="isWindows">
		    <os family="windows" />
		  </condition>

		  <condition property="isUnix">
		    <os family="unix" />
		  </condition>
	</target>
	
	<target name="check-arch">
		 <condition property="is64bit">
		      <os arch="amd64" />
		    </condition>
		  
		  <condition property="is32bit">
		      <os arch="i386" />
		    </condition>
  </target>
	
	<target name ="set-build-env" depends = "check-os, check-arch"/>
	 
	<!-- jCurses -->
	
  <target name="jcurses-set-env" depends = "set-build-env">

    <condition property="jcurses.obj.name" value="libjcurses.so">
          <and> 
            <istrue value="${isUnix}"/>
           <istrue value="${is32bit}"/>
          </and>
        </condition>
        
    <condition property="jcurses.obj.name" value="libjcurses64.so">
          <and> 
            <istrue value="${isUnix}"/>
           <istrue value="${is64bit}"/>
          </and>
    </condition>
    
    <condition property="jcurses.obj.name" value="libjcurses.dll">
      <and> 
        <istrue value="${isWindows}"/>
       <istrue value="${is32bit}"/>
      </and>
    </condition>
    
    <condition property="jcurses.obj.name" value="libjcurses64.dll">
          <and> 
           <istrue value="${isWindows}"/>
           <istrue value="${is64bit}"/>
          </and>
    </condition>
    
    <echo>
    Target jcurses object file is ${jcurses.obj.name}
    </echo>
    
  </target>

  <target name="jcurses-pre-load-check" depends ="jcurses-set-env">
    <condition property="jcurses.lib.loaded">
     <available file="${lib.dir}/${jcurses.obj.name}"/>
    </condition>
  </target>
  
  <target name="jcurses-lib-load" depends = "jcurses-pre-load-check" unless="${jcurses.lib.loaded}">
    <echo>
        Copying ${jcurses.obj.name} from ${obj.dir} to ${lib.dir}
    </echo>
        <copy file="${obj.dir}/${jcurses.obj.name}" todir="${lib.dir}" overwrite="true"/>
    
    <property name="jcurses.lib.loaded" value="true"/>
  </target>

	<!-- non-standard utility targets -->
	
	<target name="prepare-libs" depends = "jcurses-lib-load"/>
	
	<target name="compile" depends="init">
	  <javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="build.classpath" />
	</target>
	
	<target name="re-init" depends="clean,init"/>
	
	<target name="recompile" depends="clean,init,compile"/>
	
	<!-- standard targets -->
	
	<target name ="distclean">
		<!-- Cleanup files copied from obj -->
		<delete>
		      <fileset dir="${lib.dir}" includes="*.dll,*.so" />
		</delete>
	</target>
	
  <target name="clean" depends = "distclean">
    <delete dir="${build.dir}" />
  </target>

  <target name="init" depends = "prepare-libs">
    <mkdir dir="${build.dir}" />
  </target>
			
  <target name="dist" depends="compile">
    <description>Builds app and sets up distributables</description>
  </target>

	<target name="all" depends="compile"/>
	
</project> 